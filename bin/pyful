#!/usr/bin/env python
#
# pyful - Python File Manager
# This file is the execute file of pyful.
#
# Copyright (C) 2010-2011 anmitsu <anmitsu.s@gmail.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

import os
import sys

if __name__ == '__main__':
    libdir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    if os.path.exists(os.path.join(libdir, "pyful")):
        sys.path.insert(0, libdir)

from optparse import OptionParser

def option_parse():
    usage = "usage: %prog [options]"
    parser = OptionParser(usage)
    parser.add_option('-v', '--version', action='store_true', dest='version',
                      help=('display program version'))
    parser.add_option('-c', '--config', dest='config',
                      help=('load configure file'))
    parser.add_option('-e', action='store_true', dest='enter',
                      help=('wait of the user input'))
    (options, args) = parser.parse_args()

    if options.version:
        print('%s v%s' % ('pyful', __version__))
        sys.exit(0)
    if options.enter:
        from pyful import util
        util.wait_restore()
        sys.exit(0)
    if options.config is not None:
        if not os.path.exists(options.config):
            print('No such rcfile (%s)' % (options.config))
            sys.exit(1)
    return options

import locale
import imp

locale.setlocale(locale.LC_ALL, "")
imp.reload(sys)
sys.setdefaultencoding("utf-8")

from pyful import __version__, Pyful, loadrcfile, createconf, setsignal
from pyful import message
from pyful import ui

if __name__ == '__main__':
    options = option_parse()
    Pyful.binpath = os.path.abspath(__file__)

    pyful = Pyful()
    error = loadrcfile(options.config)
    ui.start_curses()
    pyful.init_function()
    setsignal()

    message.puts("Python %s" % sys.version)
    if error:
        message.exception(error)
    message.puts("Loaded %s" % Pyful.environs['RCFILE'])
    message.puts("Welcome to pyful v%s" % __version__)

    try:
        pyful.view()
        pyful.main_loop()
    except SystemExit:
        createconf()
        pyful.exit_function()
    finally:
        ui.getcomponent("Stdscr").destroy()
